openapi: 3.0.2
info:
  contact:
    email: thomas.schaffter@sagebionetworks.org
    name: The ROCC Team
    url: https://Sage-Bionetworks.github.io/rocc-schemas
  description: |
    The OpenAPI specification implemented by the Challenge Registries.
    # Introduction
    TBA
  license:
    name: Apache 2.0
    url: https://Sage-Bionetworks.github.io/rocc-schemas
  title: Registry of Open Community Challenge API
  version: 0.1.0
  x-logo:
    url: https://Sage-Bionetworks.github.io/rocc-schemas/logo.png
servers:
- url: '{protocol}://rocc.org/{environment}/v1'
  variables:
    protocol:
      default: https
      enum:
      - http
      - https
    environment:
      default: api.dev
      enum:
      - api
      - api.dev
tags:
- description: Operations about challenges
  name: Challenge
- description: Operations about users
  name: User
paths:
  /challenges:
    get:
      description: Returns all the challenges
      operationId: list_challenges
      parameters:
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 10
          type: integer
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfChallenges'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: List all the challenges
      tags:
      - Challenge
      x-openapi-router-controller: openapi_server.controllers.challenge_controller
    post:
      description: Adds a challenge
      operationId: create_challenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Challenge'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
      summary: Add a challenge
      tags:
      - Challenge
      x-openapi-router-controller: openapi_server.controllers.challenge_controller
  /challenges/{id}:
    delete:
      description: Deletes the challenge specified
      operationId: delete_challenge
      parameters:
      - description: The ID of the challenge
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete a challenge
      tags:
      - Challenge
      x-openapi-router-controller: openapi_server.controllers.challenge_controller
    get:
      description: Returns the challenge specified
      operationId: get_challenge
      parameters:
      - description: The ID of the challenge
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a challenge
      tags:
      - Challenge
      x-openapi-router-controller: openapi_server.controllers.challenge_controller
  /users/{username}:
    get:
      description: Gets the user with the specified name
      operationId: get_user_by_name
      parameters:
      - description: The username of the user who needs to be fetched
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get user by user name
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
components:
  responses:
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    Conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request conflicts with current state of the target resource
  schemas:
    ResponsePageMetadata:
      description: A page of results
      properties:
        offset:
          description: Index of the first result that must be returned
          type: integer
        limit:
          description: Maximum number of results returned
          type: integer
        links:
          $ref: '#/components/schemas/ResponsePageMetadata_links'
      required:
      - limit
      - links
      - offset
      type: object
    Organization:
      description: An organization
      example:
        name: Sage Bionetworks
        id: 507f1f77bcf86cd799439011
        url: https://sagebionetworks.org/
      properties:
        id:
          description: The ID of the organization
          example: 507f1f77bcf86cd799439011
          readOnly: true
          type: string
        name:
          description: The organization name
          example: Sage Bionetworks
          type: string
        url:
          description: The URL to the homepage of the organization
          example: https://sagebionetworks.org/
          format: uri
          type: string
      required:
      - name
      - url
      type: object
    Grant:
      description: Information about monetary resources for challenge
      example:
        sponsor:
          name: Sage Bionetworks
          id: 507f1f77bcf86cd799439011
          url: https://sagebionetworks.org/
        amount: 0
        name: name
        description: description
        id: 507f1f77bcf86cd799439011
        url: https://openapi-generator.tech
      properties:
        id:
          description: The ID of the grant
          example: 507f1f77bcf86cd799439011
          readOnly: true
          type: string
        name:
          description: The grant name
          type: string
        description:
          description: A description of the grant
          type: string
        sponsor:
          $ref: '#/components/schemas/Organization'
        amount:
          description: The amount of the grant in USD
          type: integer
        url:
          description: The URL to the grant
          format: uri
          type: string
      required:
      - name
      - sponsor
      type: object
    Email:
      description: An email address
      example: john.smith@example.com
      format: email
      type: string
    Person:
      description: A person
      example:
        firstName: John
        lastName: Smith
        id: 507f1f77bcf86cd799439011
        email: john.smith@example.com
      properties:
        id:
          description: The ID of a person
          example: 507f1f77bcf86cd799439011
          readOnly: true
          type: string
        firstName:
          description: The first name of a person
          example: John
          minLength: 1
          type: string
        lastName:
          description: The last name of a Person
          example: Smith
          minLength: 1
          type: string
        email:
          description: An email address
          example: john.smith@example.com
          format: email
          type: string
      required:
      - email
      - firstName
      type: object
    Challenge:
      description: A challenge
      example:
        website: https://synapse.org/sample-challenge
        endDate: 2020-12-31T00:00:00.000+0000
        name: Sample Challenge
        organizers:
        - firstName: John
          lastName: Smith
          id: 507f1f77bcf86cd799439011
          email: john.smith@example.com
        - firstName: John
          lastName: Smith
          id: 507f1f77bcf86cd799439011
          email: john.smith@example.com
        id: 507f1f77bcf86cd799439011
        grant:
        - sponsor:
            name: Sage Bionetworks
            id: 507f1f77bcf86cd799439011
            url: https://sagebionetworks.org/
          amount: 0
          name: name
          description: description
          id: 507f1f77bcf86cd799439011
          url: https://openapi-generator.tech
        - sponsor:
            name: Sage Bionetworks
            id: 507f1f77bcf86cd799439011
            url: https://sagebionetworks.org/
          amount: 0
          name: name
          description: description
          id: 507f1f77bcf86cd799439011
          url: https://openapi-generator.tech
        startDate: 2020-11-10T00:00:00.000+0000
        status: open
        tags:
        - Machine Learning
        - Breast Cancer
      properties:
        id:
          description: The ID of the challenge
          example: 507f1f77bcf86cd799439011
          readOnly: true
          type: string
        name:
          description: The challenge name
          example: Sample Challenge
          type: string
        startDate:
          description: When the challenge started
          example: 2020-11-10
          format: date
          type: string
        endDate:
          description: When the challenge ended
          example: 2020-12-31
          format: date
          type: string
        website:
          description: The URL to the challenge website
          example: https://synapse.org/sample-challenge
          format: url
          type: string
        status:
          description: The status of challenge
          enum:
          - upcoming
          - open
          - closed
          example: open
          type: string
        tags:
          description: The tags associated to the challenge
          example:
          - Machine Learning
          - Breast Cancer
          items:
            type: string
          minItems: 1
          type: array
        grant:
          description: The grants supporting this challenge
          items:
            $ref: '#/components/schemas/Grant'
          type: array
        organizers:
          description: The organizers of the challenge
          items:
            $ref: '#/components/schemas/Person'
          type: array
      required:
      - endDate
      - name
      - startDate
      - status
      type: object
    PageOfChallenges:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfChallenges_allOf'
      description: A page of Challenges
      type: object
    Error:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
      - status
      - title
      type: object
    User:
      description: A user of the API
      example:
        firstName: John
        lastName: Smith
        password: password
        role: user
        organizations:
        - name: Sage Bionetworks
          id: 507f1f77bcf86cd799439011
          url: https://sagebionetworks.org/
        - name: Sage Bionetworks
          id: 507f1f77bcf86cd799439011
          url: https://sagebionetworks.org/
        id: 507f1f77bcf86cd799439011
        email: john.smith@example.com
        username: John78
      properties:
        id:
          description: The ID of the user
          example: 507f1f77bcf86cd799439011
          readOnly: true
          type: string
        username:
          description: The username of the user
          example: John78
          minLength: 4
          type: string
        password:
          description: The password of the user
          format: password
          minLength: 3
          type: string
          writeOnly: true
        firstName:
          description: The first name of the user
          example: John
          minLength: 1
          type: string
        lastName:
          description: The last name of the user
          example: Smith
          minLength: 1
          type: string
        email:
          description: An email address
          example: john.smith@example.com
          format: email
          type: string
        role:
          default: user
          description: The role of the user
          enum:
          - user
          - admin
          example: user
          type: string
        organizations:
          description: The organizations the user belongs to
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      required:
      - email
      - username
      type: object
    ResponsePageMetadata_links:
      description: Links to navigate to different pages of results
      properties:
        next:
          description: Link to the next page of results
          format: uri
          type: string
      type: object
    PageOfChallenges_allOf:
      properties:
        challenges:
          description: An array of Challenges
          items:
            $ref: '#/components/schemas/Challenge'
          type: array
      type: object
