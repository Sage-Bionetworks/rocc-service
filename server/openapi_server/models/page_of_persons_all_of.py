# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.person import Person
from openapi_server import util

from openapi_server.models.person import Person  # noqa: E501

class PageOfPersonsAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, persons=None):  # noqa: E501
        """PageOfPersonsAllOf - a model defined in OpenAPI

        :param persons: The persons of this PageOfPersonsAllOf.  # noqa: E501
        :type persons: List[Person]
        """
        self.openapi_types = {
            'persons': List[Person]
        }

        self.attribute_map = {
            'persons': 'persons'
        }

        self._persons = persons

    @classmethod
    def from_dict(cls, dikt) -> 'PageOfPersonsAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PageOfPersons_allOf of this PageOfPersonsAllOf.  # noqa: E501
        :rtype: PageOfPersonsAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def persons(self):
        """Gets the persons of this PageOfPersonsAllOf.

        An array of Persons  # noqa: E501

        :return: The persons of this PageOfPersonsAllOf.
        :rtype: List[Person]
        """
        return self._persons

    @persons.setter
    def persons(self, persons):
        """Sets the persons of this PageOfPersonsAllOf.

        An array of Persons  # noqa: E501

        :param persons: The persons of this PageOfPersonsAllOf.
        :type persons: List[Person]
        """

        self._persons = persons
