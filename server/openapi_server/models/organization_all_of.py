# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class OrganizationAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, email=None, avatar_url=None, description=None, created_at=None, updated_at=None, type=None):  # noqa: E501
        """OrganizationAllOf - a model defined in OpenAPI

        :param name: The name of this OrganizationAllOf.  # noqa: E501
        :type name: str
        :param email: The email of this OrganizationAllOf.  # noqa: E501
        :type email: str
        :param avatar_url: The avatar_url of this OrganizationAllOf.  # noqa: E501
        :type avatar_url: str
        :param description: The description of this OrganizationAllOf.  # noqa: E501
        :type description: str
        :param created_at: The created_at of this OrganizationAllOf.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this OrganizationAllOf.  # noqa: E501
        :type updated_at: datetime
        :param type: The type of this OrganizationAllOf.  # noqa: E501
        :type type: str
        """
        self.openapi_types = {
            'name': str,
            'email': str,
            'avatar_url': str,
            'description': str,
            'created_at': datetime,
            'updated_at': datetime,
            'type': str
        }

        self.attribute_map = {
            'name': 'name',
            'email': 'email',
            'avatar_url': 'avatarUrl',
            'description': 'description',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt',
            'type': 'type'
        }

        self._name = name
        self._email = email
        self._avatar_url = avatar_url
        self._description = description
        self._created_at = created_at
        self._updated_at = updated_at
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'OrganizationAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Organization_allOf of this OrganizationAllOf.  # noqa: E501
        :rtype: OrganizationAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this OrganizationAllOf.


        :return: The name of this OrganizationAllOf.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrganizationAllOf.


        :param name: The name of this OrganizationAllOf.
        :type name: str
        """

        self._name = name

    @property
    def email(self):
        """Gets the email of this OrganizationAllOf.

        An email address  # noqa: E501

        :return: The email of this OrganizationAllOf.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this OrganizationAllOf.

        An email address  # noqa: E501

        :param email: The email of this OrganizationAllOf.
        :type email: str
        """

        self._email = email

    @property
    def avatar_url(self):
        """Gets the avatar_url of this OrganizationAllOf.


        :return: The avatar_url of this OrganizationAllOf.
        :rtype: str
        """
        return self._avatar_url

    @avatar_url.setter
    def avatar_url(self, avatar_url):
        """Sets the avatar_url of this OrganizationAllOf.


        :param avatar_url: The avatar_url of this OrganizationAllOf.
        :type avatar_url: str
        """

        self._avatar_url = avatar_url

    @property
    def description(self):
        """Gets the description of this OrganizationAllOf.


        :return: The description of this OrganizationAllOf.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OrganizationAllOf.


        :param description: The description of this OrganizationAllOf.
        :type description: str
        """

        self._description = description

    @property
    def created_at(self):
        """Gets the created_at of this OrganizationAllOf.


        :return: The created_at of this OrganizationAllOf.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this OrganizationAllOf.


        :param created_at: The created_at of this OrganizationAllOf.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this OrganizationAllOf.


        :return: The updated_at of this OrganizationAllOf.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this OrganizationAllOf.


        :param updated_at: The updated_at of this OrganizationAllOf.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def type(self):
        """Gets the type of this OrganizationAllOf.


        :return: The type of this OrganizationAllOf.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrganizationAllOf.


        :param type: The type of this OrganizationAllOf.
        :type type: str
        """

        self._type = type
