# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class OrgMembershipCreateRequestPermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_create_repository=None):  # noqa: E501
        """OrgMembershipCreateRequestPermissions - a model defined in OpenAPI

        :param can_create_repository: The can_create_repository of this OrgMembershipCreateRequestPermissions.  # noqa: E501
        :type can_create_repository: bool
        """
        self.openapi_types = {
            'can_create_repository': bool
        }

        self.attribute_map = {
            'can_create_repository': 'canCreateRepository'
        }

        self._can_create_repository = can_create_repository

    @classmethod
    def from_dict(cls, dikt) -> 'OrgMembershipCreateRequestPermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrgMembershipCreateRequest_permissions of this OrgMembershipCreateRequestPermissions.  # noqa: E501
        :rtype: OrgMembershipCreateRequestPermissions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_create_repository(self):
        """Gets the can_create_repository of this OrgMembershipCreateRequestPermissions.


        :return: The can_create_repository of this OrgMembershipCreateRequestPermissions.
        :rtype: bool
        """
        return self._can_create_repository

    @can_create_repository.setter
    def can_create_repository(self, can_create_repository):
        """Sets the can_create_repository of this OrgMembershipCreateRequestPermissions.


        :param can_create_repository: The can_create_repository of this OrgMembershipCreateRequestPermissions.
        :type can_create_repository: bool
        """

        self._can_create_repository = can_create_repository
