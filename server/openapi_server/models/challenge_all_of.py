# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ChallengeAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, full_name=None, owner_id=None, created_at=None, updated_at=None):  # noqa: E501
        """ChallengeAllOf - a model defined in OpenAPI

        :param full_name: The full_name of this ChallengeAllOf.  # noqa: E501
        :type full_name: str
        :param owner_id: The owner_id of this ChallengeAllOf.  # noqa: E501
        :type owner_id: str
        :param created_at: The created_at of this ChallengeAllOf.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this ChallengeAllOf.  # noqa: E501
        :type updated_at: datetime
        """
        self.openapi_types = {
            'full_name': str,
            'owner_id': str,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'full_name': 'fullName',
            'owner_id': 'ownerId',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._full_name = full_name
        self._owner_id = owner_id
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'ChallengeAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Challenge_allOf of this ChallengeAllOf.  # noqa: E501
        :rtype: ChallengeAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_name(self):
        """Gets the full_name of this ChallengeAllOf.


        :return: The full_name of this ChallengeAllOf.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this ChallengeAllOf.


        :param full_name: The full_name of this ChallengeAllOf.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def owner_id(self):
        """Gets the owner_id of this ChallengeAllOf.

        The unique identifier of an account  # noqa: E501

        :return: The owner_id of this ChallengeAllOf.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this ChallengeAllOf.

        The unique identifier of an account  # noqa: E501

        :param owner_id: The owner_id of this ChallengeAllOf.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def created_at(self):
        """Gets the created_at of this ChallengeAllOf.


        :return: The created_at of this ChallengeAllOf.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ChallengeAllOf.


        :param created_at: The created_at of this ChallengeAllOf.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this ChallengeAllOf.


        :return: The updated_at of this ChallengeAllOf.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ChallengeAllOf.


        :param updated_at: The updated_at of this ChallengeAllOf.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
