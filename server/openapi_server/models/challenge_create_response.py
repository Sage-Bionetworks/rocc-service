# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ChallengeCreateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, challenge_id=None):  # noqa: E501
        """ChallengeCreateResponse - a model defined in OpenAPI

        :param challenge_id: The challenge_id of this ChallengeCreateResponse.  # noqa: E501
        :type challenge_id: str
        """
        self.openapi_types = {
            'challenge_id': str
        }

        self.attribute_map = {
            'challenge_id': 'challengeId'
        }

        self._challenge_id = challenge_id

    @classmethod
    def from_dict(cls, dikt) -> 'ChallengeCreateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChallengeCreateResponse of this ChallengeCreateResponse.  # noqa: E501
        :rtype: ChallengeCreateResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def challenge_id(self):
        """Gets the challenge_id of this ChallengeCreateResponse.

        The ID of the challenge  # noqa: E501

        :return: The challenge_id of this ChallengeCreateResponse.
        :rtype: str
        """
        return self._challenge_id

    @challenge_id.setter
    def challenge_id(self, challenge_id):
        """Sets the challenge_id of this ChallengeCreateResponse.

        The ID of the challenge  # noqa: E501

        :param challenge_id: The challenge_id of this ChallengeCreateResponse.
        :type challenge_id: str
        """

        self._challenge_id = challenge_id
